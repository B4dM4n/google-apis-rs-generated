MCP ?= target/release/mcp

help:
	$(info -- Target ----------------------------------------------------------------------------)
	$(info gen-all             | generate all libraries and CLIs)
	$(info cargo-all           | pass args with ARGS="check" for example)
	$(info --------------------------------------------------------------------------------------)

gen-all: abusiveexperiencereport1 acceleratedmobilepageurl1 accessapproval1_beta1 accesscontextmanager1_beta accesscontextmanager1 adexchangebuyer1d2 adexchangebuyer1d3 adexchangebuyer1d4 adexchangebuyer2_beta1 adexperiencereport1 admin1_datatransfer admin1_directory admin1_reports adsense1d4 adsensehost4d1 alertcenter1_beta1 analytics2d4 analytics3 analyticsreporting4 androiddeviceprovisioning1 androidenterprise1 androidmanagement1 androidpublisher1 androidpublisher1d1 androidpublisher2 androidpublisher3 appengine1_alpha appengine1_beta appengine1 appsactivity1 appstate1 bigquery2 bigquerydatatransfer1 bigtableadmin1 bigtableadmin2 binaryauthorization1_beta1 blogger2 blogger3 books1 calendar3 chat1 civicinfo2 classroom1 cloudasset1 cloudasset1_beta1 cloudbilling1 cloudbuild1_alpha1 cloudbuild1 clouddebugger2 clouderrorreporting1_beta1 cloudfunctions1 cloudfunctions1_beta2 cloudidentity1 cloudidentity1_beta1 cloudiot1 cloudkms1 cloudprivatecatalog1_beta1 cloudprivatecatalogproducer1_beta1 cloudprofiler2 cloudresourcemanager1 cloudresourcemanager1_beta1 cloudresourcemanager2 cloudresourcemanager2_beta1 cloudscheduler1 cloudscheduler1_beta1 cloudsearch1 cloudshell1_alpha1 cloudshell1 cloudtasks2 cloudtasks2_beta2 cloudtasks2_beta3 cloudtrace1 cloudtrace2 commentanalyzer1_alpha1 composer1 composer1_beta1 computealpha computebeta compute1 container1 container1_beta1 containeranalysis1_alpha1 containeranalysis1_beta1 content2 content2d1 customsearch1 dataflow1_b3 datafusion1_beta1 dataproc1 dataproc1_beta2 datastore1 datastore1_beta1 datastore1_beta3 deploymentmanageralpha deploymentmanager2_beta deploymentmanager2 dfareporting3d1 dfareporting3d2 dfareporting3d3 dialogflow2 dialogflow2_beta1 digitalassetlinks1 discovery1 dlp2 dns1 dns1_beta2 dns2_beta1 docs1 doubleclickbidmanager1 doubleclicksearch2 drive2 drive3 driveactivity2 factchecktools1_alpha1 fcm1 file1 file1_beta1 firebase1_beta1 firebasedynamiclinks1 firebasehosting1_beta1 firebaserules1 firestore1 firestore1_beta1 firestore1_beta2 fitness1 fusiontables1 fusiontables2 games1 gamesConfiguration1_configuration gamesManagement1_management genomics1_alpha2 genomics2_alpha1 genomics1 gmail1 groupsmigration1 groupssettings1 healthcare1_alpha2 healthcare1_beta1 iam1 iamcredentials1 iap1 iap1_beta1 identitytoolkit3 indexing3 jobs3_p1beta1 jobs2 jobs3 kgsearch1 language1 language1_beta1 language1_beta2 libraryagent1 licensing1 logging2 manufacturers1 mirror1 ml1 monitoring3 oauth1 oauth2 oslogin1_alpha oslogin1_beta oslogin1 pagespeedonline1 pagespeedonline2 pagespeedonline4 pagespeedonline5 people1 playcustomapp1 plus1 plusDomains1 poly1 proximitybeacon1_beta1 pubsub1_beta1a pubsub1 pubsub1_beta2 redis1 redis1_beta1 remotebuildexecution1_alpha remotebuildexecution1 remotebuildexecution2 replicapool1_beta1 reseller1 run1_alpha1 run1 runtimeconfig1 runtimeconfig1_beta1 safebrowsing4 script1 searchconsole1 securitycenter1_p1alpha1 securitycenter1 securitycenter1_beta1 servicebroker1_alpha1 servicebroker1 servicebroker1_beta1 serviceconsumermanagement1 servicecontrol1 servicemanagement1 servicenetworking1_beta servicenetworking1 serviceusage1 serviceusage1_beta1 sheets4 siteVerification1 slides1 sourcerepo1 spanner1 speech1_p1beta1 speech1 sqladmin1_beta4 storage1 storage1_beta1 storage1_beta2 storagetransfer1 streetviewpublish1 surveys2 tagmanager1 tagmanager2 tasks1 testing1 texttospeech1 texttospeech1_beta1 toolresults1_beta3 tpu1_alpha1 tpu1 translate2 translate3_beta1 urlshortener1 vault1 videointelligence1_p1beta1 videointelligence1_p2beta1 videointelligence1_p3beta1 videointelligence1 videointelligence1_beta2 vision1_p1beta1 vision1_p2beta1 vision1 webfonts1 webmasters3 websecurityscanner1_alpha websecurityscanner1_beta websecurityscanner1 youtube3 youtubeAnalytics1 youtubeAnalytics2 youtubereporting1 
cargo-all: abusiveexperiencereport1-cargo acceleratedmobilepageurl1-cargo accessapproval1_beta1-cargo accesscontextmanager1_beta-cargo accesscontextmanager1-cargo adexchangebuyer1d2-cargo adexchangebuyer1d3-cargo adexchangebuyer1d4-cargo adexchangebuyer2_beta1-cargo adexperiencereport1-cargo admin1_datatransfer-cargo admin1_directory-cargo admin1_reports-cargo adsense1d4-cargo adsensehost4d1-cargo alertcenter1_beta1-cargo analytics2d4-cargo analytics3-cargo analyticsreporting4-cargo androiddeviceprovisioning1-cargo androidenterprise1-cargo androidmanagement1-cargo androidpublisher1-cargo androidpublisher1d1-cargo androidpublisher2-cargo androidpublisher3-cargo appengine1_alpha-cargo appengine1_beta-cargo appengine1-cargo appsactivity1-cargo appstate1-cargo bigquery2-cargo bigquerydatatransfer1-cargo bigtableadmin1-cargo bigtableadmin2-cargo binaryauthorization1_beta1-cargo blogger2-cargo blogger3-cargo books1-cargo calendar3-cargo chat1-cargo civicinfo2-cargo classroom1-cargo cloudasset1-cargo cloudasset1_beta1-cargo cloudbilling1-cargo cloudbuild1_alpha1-cargo cloudbuild1-cargo clouddebugger2-cargo clouderrorreporting1_beta1-cargo cloudfunctions1-cargo cloudfunctions1_beta2-cargo cloudidentity1-cargo cloudidentity1_beta1-cargo cloudiot1-cargo cloudkms1-cargo cloudprivatecatalog1_beta1-cargo cloudprivatecatalogproducer1_beta1-cargo cloudprofiler2-cargo cloudresourcemanager1-cargo cloudresourcemanager1_beta1-cargo cloudresourcemanager2-cargo cloudresourcemanager2_beta1-cargo cloudscheduler1-cargo cloudscheduler1_beta1-cargo cloudsearch1-cargo cloudshell1_alpha1-cargo cloudshell1-cargo cloudtasks2-cargo cloudtasks2_beta2-cargo cloudtasks2_beta3-cargo cloudtrace1-cargo cloudtrace2-cargo commentanalyzer1_alpha1-cargo composer1-cargo composer1_beta1-cargo computealpha-cargo computebeta-cargo compute1-cargo container1-cargo container1_beta1-cargo containeranalysis1_alpha1-cargo containeranalysis1_beta1-cargo content2-cargo content2d1-cargo customsearch1-cargo dataflow1_b3-cargo datafusion1_beta1-cargo dataproc1-cargo dataproc1_beta2-cargo datastore1-cargo datastore1_beta1-cargo datastore1_beta3-cargo deploymentmanageralpha-cargo deploymentmanager2_beta-cargo deploymentmanager2-cargo dfareporting3d1-cargo dfareporting3d2-cargo dfareporting3d3-cargo dialogflow2-cargo dialogflow2_beta1-cargo digitalassetlinks1-cargo discovery1-cargo dlp2-cargo dns1-cargo dns1_beta2-cargo dns2_beta1-cargo docs1-cargo doubleclickbidmanager1-cargo doubleclicksearch2-cargo drive2-cargo drive3-cargo driveactivity2-cargo factchecktools1_alpha1-cargo fcm1-cargo file1-cargo file1_beta1-cargo firebase1_beta1-cargo firebasedynamiclinks1-cargo firebasehosting1_beta1-cargo firebaserules1-cargo firestore1-cargo firestore1_beta1-cargo firestore1_beta2-cargo fitness1-cargo fusiontables1-cargo fusiontables2-cargo games1-cargo gamesConfiguration1_configuration-cargo gamesManagement1_management-cargo genomics1_alpha2-cargo genomics2_alpha1-cargo genomics1-cargo gmail1-cargo groupsmigration1-cargo groupssettings1-cargo healthcare1_alpha2-cargo healthcare1_beta1-cargo iam1-cargo iamcredentials1-cargo iap1-cargo iap1_beta1-cargo identitytoolkit3-cargo indexing3-cargo jobs3_p1beta1-cargo jobs2-cargo jobs3-cargo kgsearch1-cargo language1-cargo language1_beta1-cargo language1_beta2-cargo libraryagent1-cargo licensing1-cargo logging2-cargo manufacturers1-cargo mirror1-cargo ml1-cargo monitoring3-cargo oauth1-cargo oauth2-cargo oslogin1_alpha-cargo oslogin1_beta-cargo oslogin1-cargo pagespeedonline1-cargo pagespeedonline2-cargo pagespeedonline4-cargo pagespeedonline5-cargo people1-cargo playcustomapp1-cargo plus1-cargo plusDomains1-cargo poly1-cargo proximitybeacon1_beta1-cargo pubsub1_beta1a-cargo pubsub1-cargo pubsub1_beta2-cargo redis1-cargo redis1_beta1-cargo remotebuildexecution1_alpha-cargo remotebuildexecution1-cargo remotebuildexecution2-cargo replicapool1_beta1-cargo reseller1-cargo run1_alpha1-cargo run1-cargo runtimeconfig1-cargo runtimeconfig1_beta1-cargo safebrowsing4-cargo script1-cargo searchconsole1-cargo securitycenter1_p1alpha1-cargo securitycenter1-cargo securitycenter1_beta1-cargo servicebroker1_alpha1-cargo servicebroker1-cargo servicebroker1_beta1-cargo serviceconsumermanagement1-cargo servicecontrol1-cargo servicemanagement1-cargo servicenetworking1_beta-cargo servicenetworking1-cargo serviceusage1-cargo serviceusage1_beta1-cargo sheets4-cargo siteVerification1-cargo slides1-cargo sourcerepo1-cargo spanner1-cargo speech1_p1beta1-cargo speech1-cargo sqladmin1_beta4-cargo storage1-cargo storage1_beta1-cargo storage1_beta2-cargo storagetransfer1-cargo streetviewpublish1-cargo surveys2-cargo tagmanager1-cargo tagmanager2-cargo tasks1-cargo testing1-cargo texttospeech1-cargo texttospeech1_beta1-cargo toolresults1_beta3-cargo tpu1_alpha1-cargo tpu1-cargo translate2-cargo translate3_beta1-cargo urlshortener1-cargo vault1-cargo videointelligence1_p1beta1-cargo videointelligence1_p2beta1-cargo videointelligence1_p3beta1-cargo videointelligence1-cargo videointelligence1_beta2-cargo vision1_p1beta1-cargo vision1_p2beta1-cargo vision1-cargo webfonts1-cargo webmasters3-cargo websecurityscanner1_alpha-cargo websecurityscanner1_beta-cargo websecurityscanner1-cargo youtube3-cargo youtubeAnalytics1-cargo youtubeAnalytics2-cargo youtubereporting1-cargo 


abusiveexperiencereport/v1/lib/Cargo.toml: abusiveexperiencereport/v1/spec.json $(MCP)
	$(MCP) generate $< abusiveexperiencereport/v1
abusiveexperiencereport1: abusiveexperiencereport/v1/lib/Cargo.toml
abusiveexperiencereport1-cargo: abusiveexperiencereport1
	cd abusiveexperiencereport/v1 && cargo $(ARGS)

acceleratedmobilepageurl/v1/lib/Cargo.toml: acceleratedmobilepageurl/v1/spec.json $(MCP)
	$(MCP) generate $< acceleratedmobilepageurl/v1
acceleratedmobilepageurl1: acceleratedmobilepageurl/v1/lib/Cargo.toml
acceleratedmobilepageurl1-cargo: acceleratedmobilepageurl1
	cd acceleratedmobilepageurl/v1 && cargo $(ARGS)

accessapproval/v1beta1/lib/Cargo.toml: accessapproval/v1beta1/spec.json $(MCP)
	$(MCP) generate $< accessapproval/v1beta1
accessapproval1_beta1: accessapproval/v1beta1/lib/Cargo.toml
accessapproval1_beta1-cargo: accessapproval1_beta1
	cd accessapproval/v1beta1 && cargo $(ARGS)

accesscontextmanager/v1beta/lib/Cargo.toml: accesscontextmanager/v1beta/spec.json $(MCP)
	$(MCP) generate $< accesscontextmanager/v1beta
accesscontextmanager1_beta: accesscontextmanager/v1beta/lib/Cargo.toml
accesscontextmanager1_beta-cargo: accesscontextmanager1_beta
	cd accesscontextmanager/v1beta && cargo $(ARGS)

accesscontextmanager/v1/lib/Cargo.toml: accesscontextmanager/v1/spec.json $(MCP)
	$(MCP) generate $< accesscontextmanager/v1
accesscontextmanager1: accesscontextmanager/v1/lib/Cargo.toml
accesscontextmanager1-cargo: accesscontextmanager1
	cd accesscontextmanager/v1 && cargo $(ARGS)

adexchangebuyer/v1.2/lib/Cargo.toml: adexchangebuyer/v1.2/spec.json $(MCP)
	$(MCP) generate $< adexchangebuyer/v1.2
adexchangebuyer1d2: adexchangebuyer/v1.2/lib/Cargo.toml
adexchangebuyer1d2-cargo: adexchangebuyer1d2
	cd adexchangebuyer/v1.2 && cargo $(ARGS)

adexchangebuyer/v1.3/lib/Cargo.toml: adexchangebuyer/v1.3/spec.json $(MCP)
	$(MCP) generate $< adexchangebuyer/v1.3
adexchangebuyer1d3: adexchangebuyer/v1.3/lib/Cargo.toml
adexchangebuyer1d3-cargo: adexchangebuyer1d3
	cd adexchangebuyer/v1.3 && cargo $(ARGS)

adexchangebuyer/v1.4/lib/Cargo.toml: adexchangebuyer/v1.4/spec.json $(MCP)
	$(MCP) generate $< adexchangebuyer/v1.4
adexchangebuyer1d4: adexchangebuyer/v1.4/lib/Cargo.toml
adexchangebuyer1d4-cargo: adexchangebuyer1d4
	cd adexchangebuyer/v1.4 && cargo $(ARGS)

adexchangebuyer/v2beta1/lib/Cargo.toml: adexchangebuyer/v2beta1/spec.json $(MCP)
	$(MCP) generate $< adexchangebuyer/v2beta1
adexchangebuyer2_beta1: adexchangebuyer/v2beta1/lib/Cargo.toml
adexchangebuyer2_beta1-cargo: adexchangebuyer2_beta1
	cd adexchangebuyer/v2beta1 && cargo $(ARGS)

adexperiencereport/v1/lib/Cargo.toml: adexperiencereport/v1/spec.json $(MCP)
	$(MCP) generate $< adexperiencereport/v1
adexperiencereport1: adexperiencereport/v1/lib/Cargo.toml
adexperiencereport1-cargo: adexperiencereport1
	cd adexperiencereport/v1 && cargo $(ARGS)

admin/datatransfer_v1/lib/Cargo.toml: admin/datatransfer_v1/spec.json $(MCP)
	$(MCP) generate $< admin/datatransfer_v1
admin1_datatransfer: admin/datatransfer_v1/lib/Cargo.toml
admin1_datatransfer-cargo: admin1_datatransfer
	cd admin/datatransfer_v1 && cargo $(ARGS)

admin/directory_v1/lib/Cargo.toml: admin/directory_v1/spec.json $(MCP)
	$(MCP) generate $< admin/directory_v1
admin1_directory: admin/directory_v1/lib/Cargo.toml
admin1_directory-cargo: admin1_directory
	cd admin/directory_v1 && cargo $(ARGS)

admin/reports_v1/lib/Cargo.toml: admin/reports_v1/spec.json $(MCP)
	$(MCP) generate $< admin/reports_v1
admin1_reports: admin/reports_v1/lib/Cargo.toml
admin1_reports-cargo: admin1_reports
	cd admin/reports_v1 && cargo $(ARGS)

adsense/v1.4/lib/Cargo.toml: adsense/v1.4/spec.json $(MCP)
	$(MCP) generate $< adsense/v1.4
adsense1d4: adsense/v1.4/lib/Cargo.toml
adsense1d4-cargo: adsense1d4
	cd adsense/v1.4 && cargo $(ARGS)

adsensehost/v4.1/lib/Cargo.toml: adsensehost/v4.1/spec.json $(MCP)
	$(MCP) generate $< adsensehost/v4.1
adsensehost4d1: adsensehost/v4.1/lib/Cargo.toml
adsensehost4d1-cargo: adsensehost4d1
	cd adsensehost/v4.1 && cargo $(ARGS)

alertcenter/v1beta1/lib/Cargo.toml: alertcenter/v1beta1/spec.json $(MCP)
	$(MCP) generate $< alertcenter/v1beta1
alertcenter1_beta1: alertcenter/v1beta1/lib/Cargo.toml
alertcenter1_beta1-cargo: alertcenter1_beta1
	cd alertcenter/v1beta1 && cargo $(ARGS)

analytics/v2.4/lib/Cargo.toml: analytics/v2.4/spec.json $(MCP)
	$(MCP) generate $< analytics/v2.4
analytics2d4: analytics/v2.4/lib/Cargo.toml
analytics2d4-cargo: analytics2d4
	cd analytics/v2.4 && cargo $(ARGS)

analytics/v3/lib/Cargo.toml: analytics/v3/spec.json $(MCP)
	$(MCP) generate $< analytics/v3
analytics3: analytics/v3/lib/Cargo.toml
analytics3-cargo: analytics3
	cd analytics/v3 && cargo $(ARGS)

analyticsreporting/v4/lib/Cargo.toml: analyticsreporting/v4/spec.json $(MCP)
	$(MCP) generate $< analyticsreporting/v4
analyticsreporting4: analyticsreporting/v4/lib/Cargo.toml
analyticsreporting4-cargo: analyticsreporting4
	cd analyticsreporting/v4 && cargo $(ARGS)

androiddeviceprovisioning/v1/lib/Cargo.toml: androiddeviceprovisioning/v1/spec.json $(MCP)
	$(MCP) generate $< androiddeviceprovisioning/v1
androiddeviceprovisioning1: androiddeviceprovisioning/v1/lib/Cargo.toml
androiddeviceprovisioning1-cargo: androiddeviceprovisioning1
	cd androiddeviceprovisioning/v1 && cargo $(ARGS)

androidenterprise/v1/lib/Cargo.toml: androidenterprise/v1/spec.json $(MCP)
	$(MCP) generate $< androidenterprise/v1
androidenterprise1: androidenterprise/v1/lib/Cargo.toml
androidenterprise1-cargo: androidenterprise1
	cd androidenterprise/v1 && cargo $(ARGS)

androidmanagement/v1/lib/Cargo.toml: androidmanagement/v1/spec.json $(MCP)
	$(MCP) generate $< androidmanagement/v1
androidmanagement1: androidmanagement/v1/lib/Cargo.toml
androidmanagement1-cargo: androidmanagement1
	cd androidmanagement/v1 && cargo $(ARGS)

androidpublisher/v1/lib/Cargo.toml: androidpublisher/v1/spec.json $(MCP)
	$(MCP) generate $< androidpublisher/v1
androidpublisher1: androidpublisher/v1/lib/Cargo.toml
androidpublisher1-cargo: androidpublisher1
	cd androidpublisher/v1 && cargo $(ARGS)

androidpublisher/v1.1/lib/Cargo.toml: androidpublisher/v1.1/spec.json $(MCP)
	$(MCP) generate $< androidpublisher/v1.1
androidpublisher1d1: androidpublisher/v1.1/lib/Cargo.toml
androidpublisher1d1-cargo: androidpublisher1d1
	cd androidpublisher/v1.1 && cargo $(ARGS)

androidpublisher/v2/lib/Cargo.toml: androidpublisher/v2/spec.json $(MCP)
	$(MCP) generate $< androidpublisher/v2
androidpublisher2: androidpublisher/v2/lib/Cargo.toml
androidpublisher2-cargo: androidpublisher2
	cd androidpublisher/v2 && cargo $(ARGS)

androidpublisher/v3/lib/Cargo.toml: androidpublisher/v3/spec.json $(MCP)
	$(MCP) generate $< androidpublisher/v3
androidpublisher3: androidpublisher/v3/lib/Cargo.toml
androidpublisher3-cargo: androidpublisher3
	cd androidpublisher/v3 && cargo $(ARGS)

appengine/v1alpha/lib/Cargo.toml: appengine/v1alpha/spec.json $(MCP)
	$(MCP) generate $< appengine/v1alpha
appengine1_alpha: appengine/v1alpha/lib/Cargo.toml
appengine1_alpha-cargo: appengine1_alpha
	cd appengine/v1alpha && cargo $(ARGS)

appengine/v1beta/lib/Cargo.toml: appengine/v1beta/spec.json $(MCP)
	$(MCP) generate $< appengine/v1beta
appengine1_beta: appengine/v1beta/lib/Cargo.toml
appengine1_beta-cargo: appengine1_beta
	cd appengine/v1beta && cargo $(ARGS)

appengine/v1/lib/Cargo.toml: appengine/v1/spec.json $(MCP)
	$(MCP) generate $< appengine/v1
appengine1: appengine/v1/lib/Cargo.toml
appengine1-cargo: appengine1
	cd appengine/v1 && cargo $(ARGS)

appsactivity/v1/lib/Cargo.toml: appsactivity/v1/spec.json $(MCP)
	$(MCP) generate $< appsactivity/v1
appsactivity1: appsactivity/v1/lib/Cargo.toml
appsactivity1-cargo: appsactivity1
	cd appsactivity/v1 && cargo $(ARGS)

appstate/v1/lib/Cargo.toml: appstate/v1/spec.json $(MCP)
	$(MCP) generate $< appstate/v1
appstate1: appstate/v1/lib/Cargo.toml
appstate1-cargo: appstate1
	cd appstate/v1 && cargo $(ARGS)

bigquery/v2/lib/Cargo.toml: bigquery/v2/spec.json $(MCP)
	$(MCP) generate $< bigquery/v2
bigquery2: bigquery/v2/lib/Cargo.toml
bigquery2-cargo: bigquery2
	cd bigquery/v2 && cargo $(ARGS)

bigquerydatatransfer/v1/lib/Cargo.toml: bigquerydatatransfer/v1/spec.json $(MCP)
	$(MCP) generate $< bigquerydatatransfer/v1
bigquerydatatransfer1: bigquerydatatransfer/v1/lib/Cargo.toml
bigquerydatatransfer1-cargo: bigquerydatatransfer1
	cd bigquerydatatransfer/v1 && cargo $(ARGS)

bigtableadmin/v1/lib/Cargo.toml: bigtableadmin/v1/spec.json $(MCP)
	$(MCP) generate $< bigtableadmin/v1
bigtableadmin1: bigtableadmin/v1/lib/Cargo.toml
bigtableadmin1-cargo: bigtableadmin1
	cd bigtableadmin/v1 && cargo $(ARGS)

bigtableadmin/v2/lib/Cargo.toml: bigtableadmin/v2/spec.json $(MCP)
	$(MCP) generate $< bigtableadmin/v2
bigtableadmin2: bigtableadmin/v2/lib/Cargo.toml
bigtableadmin2-cargo: bigtableadmin2
	cd bigtableadmin/v2 && cargo $(ARGS)

binaryauthorization/v1beta1/lib/Cargo.toml: binaryauthorization/v1beta1/spec.json $(MCP)
	$(MCP) generate $< binaryauthorization/v1beta1
binaryauthorization1_beta1: binaryauthorization/v1beta1/lib/Cargo.toml
binaryauthorization1_beta1-cargo: binaryauthorization1_beta1
	cd binaryauthorization/v1beta1 && cargo $(ARGS)

blogger/v2/lib/Cargo.toml: blogger/v2/spec.json $(MCP)
	$(MCP) generate $< blogger/v2
blogger2: blogger/v2/lib/Cargo.toml
blogger2-cargo: blogger2
	cd blogger/v2 && cargo $(ARGS)

blogger/v3/lib/Cargo.toml: blogger/v3/spec.json $(MCP)
	$(MCP) generate $< blogger/v3
blogger3: blogger/v3/lib/Cargo.toml
blogger3-cargo: blogger3
	cd blogger/v3 && cargo $(ARGS)

books/v1/lib/Cargo.toml: books/v1/spec.json $(MCP)
	$(MCP) generate $< books/v1
books1: books/v1/lib/Cargo.toml
books1-cargo: books1
	cd books/v1 && cargo $(ARGS)

calendar/v3/lib/Cargo.toml: calendar/v3/spec.json $(MCP)
	$(MCP) generate $< calendar/v3
calendar3: calendar/v3/lib/Cargo.toml
calendar3-cargo: calendar3
	cd calendar/v3 && cargo $(ARGS)

chat/v1/lib/Cargo.toml: chat/v1/spec.json $(MCP)
	$(MCP) generate $< chat/v1
chat1: chat/v1/lib/Cargo.toml
chat1-cargo: chat1
	cd chat/v1 && cargo $(ARGS)

civicinfo/v2/lib/Cargo.toml: civicinfo/v2/spec.json $(MCP)
	$(MCP) generate $< civicinfo/v2
civicinfo2: civicinfo/v2/lib/Cargo.toml
civicinfo2-cargo: civicinfo2
	cd civicinfo/v2 && cargo $(ARGS)

classroom/v1/lib/Cargo.toml: classroom/v1/spec.json $(MCP)
	$(MCP) generate $< classroom/v1
classroom1: classroom/v1/lib/Cargo.toml
classroom1-cargo: classroom1
	cd classroom/v1 && cargo $(ARGS)

cloudasset/v1/lib/Cargo.toml: cloudasset/v1/spec.json $(MCP)
	$(MCP) generate $< cloudasset/v1
cloudasset1: cloudasset/v1/lib/Cargo.toml
cloudasset1-cargo: cloudasset1
	cd cloudasset/v1 && cargo $(ARGS)

cloudasset/v1beta1/lib/Cargo.toml: cloudasset/v1beta1/spec.json $(MCP)
	$(MCP) generate $< cloudasset/v1beta1
cloudasset1_beta1: cloudasset/v1beta1/lib/Cargo.toml
cloudasset1_beta1-cargo: cloudasset1_beta1
	cd cloudasset/v1beta1 && cargo $(ARGS)

cloudbilling/v1/lib/Cargo.toml: cloudbilling/v1/spec.json $(MCP)
	$(MCP) generate $< cloudbilling/v1
cloudbilling1: cloudbilling/v1/lib/Cargo.toml
cloudbilling1-cargo: cloudbilling1
	cd cloudbilling/v1 && cargo $(ARGS)

cloudbuild/v1alpha1/lib/Cargo.toml: cloudbuild/v1alpha1/spec.json $(MCP)
	$(MCP) generate $< cloudbuild/v1alpha1
cloudbuild1_alpha1: cloudbuild/v1alpha1/lib/Cargo.toml
cloudbuild1_alpha1-cargo: cloudbuild1_alpha1
	cd cloudbuild/v1alpha1 && cargo $(ARGS)

cloudbuild/v1/lib/Cargo.toml: cloudbuild/v1/spec.json $(MCP)
	$(MCP) generate $< cloudbuild/v1
cloudbuild1: cloudbuild/v1/lib/Cargo.toml
cloudbuild1-cargo: cloudbuild1
	cd cloudbuild/v1 && cargo $(ARGS)

clouddebugger/v2/lib/Cargo.toml: clouddebugger/v2/spec.json $(MCP)
	$(MCP) generate $< clouddebugger/v2
clouddebugger2: clouddebugger/v2/lib/Cargo.toml
clouddebugger2-cargo: clouddebugger2
	cd clouddebugger/v2 && cargo $(ARGS)

clouderrorreporting/v1beta1/lib/Cargo.toml: clouderrorreporting/v1beta1/spec.json $(MCP)
	$(MCP) generate $< clouderrorreporting/v1beta1
clouderrorreporting1_beta1: clouderrorreporting/v1beta1/lib/Cargo.toml
clouderrorreporting1_beta1-cargo: clouderrorreporting1_beta1
	cd clouderrorreporting/v1beta1 && cargo $(ARGS)

cloudfunctions/v1/lib/Cargo.toml: cloudfunctions/v1/spec.json $(MCP)
	$(MCP) generate $< cloudfunctions/v1
cloudfunctions1: cloudfunctions/v1/lib/Cargo.toml
cloudfunctions1-cargo: cloudfunctions1
	cd cloudfunctions/v1 && cargo $(ARGS)

cloudfunctions/v1beta2/lib/Cargo.toml: cloudfunctions/v1beta2/spec.json $(MCP)
	$(MCP) generate $< cloudfunctions/v1beta2
cloudfunctions1_beta2: cloudfunctions/v1beta2/lib/Cargo.toml
cloudfunctions1_beta2-cargo: cloudfunctions1_beta2
	cd cloudfunctions/v1beta2 && cargo $(ARGS)

cloudidentity/v1/lib/Cargo.toml: cloudidentity/v1/spec.json $(MCP)
	$(MCP) generate $< cloudidentity/v1
cloudidentity1: cloudidentity/v1/lib/Cargo.toml
cloudidentity1-cargo: cloudidentity1
	cd cloudidentity/v1 && cargo $(ARGS)

cloudidentity/v1beta1/lib/Cargo.toml: cloudidentity/v1beta1/spec.json $(MCP)
	$(MCP) generate $< cloudidentity/v1beta1
cloudidentity1_beta1: cloudidentity/v1beta1/lib/Cargo.toml
cloudidentity1_beta1-cargo: cloudidentity1_beta1
	cd cloudidentity/v1beta1 && cargo $(ARGS)

cloudiot/v1/lib/Cargo.toml: cloudiot/v1/spec.json $(MCP)
	$(MCP) generate $< cloudiot/v1
cloudiot1: cloudiot/v1/lib/Cargo.toml
cloudiot1-cargo: cloudiot1
	cd cloudiot/v1 && cargo $(ARGS)

cloudkms/v1/lib/Cargo.toml: cloudkms/v1/spec.json $(MCP)
	$(MCP) generate $< cloudkms/v1
cloudkms1: cloudkms/v1/lib/Cargo.toml
cloudkms1-cargo: cloudkms1
	cd cloudkms/v1 && cargo $(ARGS)

cloudprivatecatalog/v1beta1/lib/Cargo.toml: cloudprivatecatalog/v1beta1/spec.json $(MCP)
	$(MCP) generate $< cloudprivatecatalog/v1beta1
cloudprivatecatalog1_beta1: cloudprivatecatalog/v1beta1/lib/Cargo.toml
cloudprivatecatalog1_beta1-cargo: cloudprivatecatalog1_beta1
	cd cloudprivatecatalog/v1beta1 && cargo $(ARGS)

cloudprivatecatalogproducer/v1beta1/lib/Cargo.toml: cloudprivatecatalogproducer/v1beta1/spec.json $(MCP)
	$(MCP) generate $< cloudprivatecatalogproducer/v1beta1
cloudprivatecatalogproducer1_beta1: cloudprivatecatalogproducer/v1beta1/lib/Cargo.toml
cloudprivatecatalogproducer1_beta1-cargo: cloudprivatecatalogproducer1_beta1
	cd cloudprivatecatalogproducer/v1beta1 && cargo $(ARGS)

cloudprofiler/v2/lib/Cargo.toml: cloudprofiler/v2/spec.json $(MCP)
	$(MCP) generate $< cloudprofiler/v2
cloudprofiler2: cloudprofiler/v2/lib/Cargo.toml
cloudprofiler2-cargo: cloudprofiler2
	cd cloudprofiler/v2 && cargo $(ARGS)

cloudresourcemanager/v1/lib/Cargo.toml: cloudresourcemanager/v1/spec.json $(MCP)
	$(MCP) generate $< cloudresourcemanager/v1
cloudresourcemanager1: cloudresourcemanager/v1/lib/Cargo.toml
cloudresourcemanager1-cargo: cloudresourcemanager1
	cd cloudresourcemanager/v1 && cargo $(ARGS)

cloudresourcemanager/v1beta1/lib/Cargo.toml: cloudresourcemanager/v1beta1/spec.json $(MCP)
	$(MCP) generate $< cloudresourcemanager/v1beta1
cloudresourcemanager1_beta1: cloudresourcemanager/v1beta1/lib/Cargo.toml
cloudresourcemanager1_beta1-cargo: cloudresourcemanager1_beta1
	cd cloudresourcemanager/v1beta1 && cargo $(ARGS)

cloudresourcemanager/v2/lib/Cargo.toml: cloudresourcemanager/v2/spec.json $(MCP)
	$(MCP) generate $< cloudresourcemanager/v2
cloudresourcemanager2: cloudresourcemanager/v2/lib/Cargo.toml
cloudresourcemanager2-cargo: cloudresourcemanager2
	cd cloudresourcemanager/v2 && cargo $(ARGS)

cloudresourcemanager/v2beta1/lib/Cargo.toml: cloudresourcemanager/v2beta1/spec.json $(MCP)
	$(MCP) generate $< cloudresourcemanager/v2beta1
cloudresourcemanager2_beta1: cloudresourcemanager/v2beta1/lib/Cargo.toml
cloudresourcemanager2_beta1-cargo: cloudresourcemanager2_beta1
	cd cloudresourcemanager/v2beta1 && cargo $(ARGS)

cloudscheduler/v1/lib/Cargo.toml: cloudscheduler/v1/spec.json $(MCP)
	$(MCP) generate $< cloudscheduler/v1
cloudscheduler1: cloudscheduler/v1/lib/Cargo.toml
cloudscheduler1-cargo: cloudscheduler1
	cd cloudscheduler/v1 && cargo $(ARGS)

cloudscheduler/v1beta1/lib/Cargo.toml: cloudscheduler/v1beta1/spec.json $(MCP)
	$(MCP) generate $< cloudscheduler/v1beta1
cloudscheduler1_beta1: cloudscheduler/v1beta1/lib/Cargo.toml
cloudscheduler1_beta1-cargo: cloudscheduler1_beta1
	cd cloudscheduler/v1beta1 && cargo $(ARGS)

cloudsearch/v1/lib/Cargo.toml: cloudsearch/v1/spec.json $(MCP)
	$(MCP) generate $< cloudsearch/v1
cloudsearch1: cloudsearch/v1/lib/Cargo.toml
cloudsearch1-cargo: cloudsearch1
	cd cloudsearch/v1 && cargo $(ARGS)

cloudshell/v1alpha1/lib/Cargo.toml: cloudshell/v1alpha1/spec.json $(MCP)
	$(MCP) generate $< cloudshell/v1alpha1
cloudshell1_alpha1: cloudshell/v1alpha1/lib/Cargo.toml
cloudshell1_alpha1-cargo: cloudshell1_alpha1
	cd cloudshell/v1alpha1 && cargo $(ARGS)

cloudshell/v1/lib/Cargo.toml: cloudshell/v1/spec.json $(MCP)
	$(MCP) generate $< cloudshell/v1
cloudshell1: cloudshell/v1/lib/Cargo.toml
cloudshell1-cargo: cloudshell1
	cd cloudshell/v1 && cargo $(ARGS)

cloudtasks/v2/lib/Cargo.toml: cloudtasks/v2/spec.json $(MCP)
	$(MCP) generate $< cloudtasks/v2
cloudtasks2: cloudtasks/v2/lib/Cargo.toml
cloudtasks2-cargo: cloudtasks2
	cd cloudtasks/v2 && cargo $(ARGS)

cloudtasks/v2beta2/lib/Cargo.toml: cloudtasks/v2beta2/spec.json $(MCP)
	$(MCP) generate $< cloudtasks/v2beta2
cloudtasks2_beta2: cloudtasks/v2beta2/lib/Cargo.toml
cloudtasks2_beta2-cargo: cloudtasks2_beta2
	cd cloudtasks/v2beta2 && cargo $(ARGS)

cloudtasks/v2beta3/lib/Cargo.toml: cloudtasks/v2beta3/spec.json $(MCP)
	$(MCP) generate $< cloudtasks/v2beta3
cloudtasks2_beta3: cloudtasks/v2beta3/lib/Cargo.toml
cloudtasks2_beta3-cargo: cloudtasks2_beta3
	cd cloudtasks/v2beta3 && cargo $(ARGS)

cloudtrace/v1/lib/Cargo.toml: cloudtrace/v1/spec.json $(MCP)
	$(MCP) generate $< cloudtrace/v1
cloudtrace1: cloudtrace/v1/lib/Cargo.toml
cloudtrace1-cargo: cloudtrace1
	cd cloudtrace/v1 && cargo $(ARGS)

cloudtrace/v2/lib/Cargo.toml: cloudtrace/v2/spec.json $(MCP)
	$(MCP) generate $< cloudtrace/v2
cloudtrace2: cloudtrace/v2/lib/Cargo.toml
cloudtrace2-cargo: cloudtrace2
	cd cloudtrace/v2 && cargo $(ARGS)

commentanalyzer/v1alpha1/lib/Cargo.toml: commentanalyzer/v1alpha1/spec.json $(MCP)
	$(MCP) generate $< commentanalyzer/v1alpha1
commentanalyzer1_alpha1: commentanalyzer/v1alpha1/lib/Cargo.toml
commentanalyzer1_alpha1-cargo: commentanalyzer1_alpha1
	cd commentanalyzer/v1alpha1 && cargo $(ARGS)

composer/v1/lib/Cargo.toml: composer/v1/spec.json $(MCP)
	$(MCP) generate $< composer/v1
composer1: composer/v1/lib/Cargo.toml
composer1-cargo: composer1
	cd composer/v1 && cargo $(ARGS)

composer/v1beta1/lib/Cargo.toml: composer/v1beta1/spec.json $(MCP)
	$(MCP) generate $< composer/v1beta1
composer1_beta1: composer/v1beta1/lib/Cargo.toml
composer1_beta1-cargo: composer1_beta1
	cd composer/v1beta1 && cargo $(ARGS)

compute/alpha/lib/Cargo.toml: compute/alpha/spec.json $(MCP)
	$(MCP) generate $< compute/alpha
computealpha: compute/alpha/lib/Cargo.toml
computealpha-cargo: computealpha
	cd compute/alpha && cargo $(ARGS)

compute/beta/lib/Cargo.toml: compute/beta/spec.json $(MCP)
	$(MCP) generate $< compute/beta
computebeta: compute/beta/lib/Cargo.toml
computebeta-cargo: computebeta
	cd compute/beta && cargo $(ARGS)

compute/v1/lib/Cargo.toml: compute/v1/spec.json $(MCP)
	$(MCP) generate $< compute/v1
compute1: compute/v1/lib/Cargo.toml
compute1-cargo: compute1
	cd compute/v1 && cargo $(ARGS)

container/v1/lib/Cargo.toml: container/v1/spec.json $(MCP)
	$(MCP) generate $< container/v1
container1: container/v1/lib/Cargo.toml
container1-cargo: container1
	cd container/v1 && cargo $(ARGS)

container/v1beta1/lib/Cargo.toml: container/v1beta1/spec.json $(MCP)
	$(MCP) generate $< container/v1beta1
container1_beta1: container/v1beta1/lib/Cargo.toml
container1_beta1-cargo: container1_beta1
	cd container/v1beta1 && cargo $(ARGS)

containeranalysis/v1alpha1/lib/Cargo.toml: containeranalysis/v1alpha1/spec.json $(MCP)
	$(MCP) generate $< containeranalysis/v1alpha1
containeranalysis1_alpha1: containeranalysis/v1alpha1/lib/Cargo.toml
containeranalysis1_alpha1-cargo: containeranalysis1_alpha1
	cd containeranalysis/v1alpha1 && cargo $(ARGS)

containeranalysis/v1beta1/lib/Cargo.toml: containeranalysis/v1beta1/spec.json $(MCP)
	$(MCP) generate $< containeranalysis/v1beta1
containeranalysis1_beta1: containeranalysis/v1beta1/lib/Cargo.toml
containeranalysis1_beta1-cargo: containeranalysis1_beta1
	cd containeranalysis/v1beta1 && cargo $(ARGS)

content/v2/lib/Cargo.toml: content/v2/spec.json $(MCP)
	$(MCP) generate $< content/v2
content2: content/v2/lib/Cargo.toml
content2-cargo: content2
	cd content/v2 && cargo $(ARGS)

content/v2.1/lib/Cargo.toml: content/v2.1/spec.json $(MCP)
	$(MCP) generate $< content/v2.1
content2d1: content/v2.1/lib/Cargo.toml
content2d1-cargo: content2d1
	cd content/v2.1 && cargo $(ARGS)

customsearch/v1/lib/Cargo.toml: customsearch/v1/spec.json $(MCP)
	$(MCP) generate $< customsearch/v1
customsearch1: customsearch/v1/lib/Cargo.toml
customsearch1-cargo: customsearch1
	cd customsearch/v1 && cargo $(ARGS)

dataflow/v1b3/lib/Cargo.toml: dataflow/v1b3/spec.json $(MCP)
	$(MCP) generate $< dataflow/v1b3
dataflow1_b3: dataflow/v1b3/lib/Cargo.toml
dataflow1_b3-cargo: dataflow1_b3
	cd dataflow/v1b3 && cargo $(ARGS)

datafusion/v1beta1/lib/Cargo.toml: datafusion/v1beta1/spec.json $(MCP)
	$(MCP) generate $< datafusion/v1beta1
datafusion1_beta1: datafusion/v1beta1/lib/Cargo.toml
datafusion1_beta1-cargo: datafusion1_beta1
	cd datafusion/v1beta1 && cargo $(ARGS)

dataproc/v1/lib/Cargo.toml: dataproc/v1/spec.json $(MCP)
	$(MCP) generate $< dataproc/v1
dataproc1: dataproc/v1/lib/Cargo.toml
dataproc1-cargo: dataproc1
	cd dataproc/v1 && cargo $(ARGS)

dataproc/v1beta2/lib/Cargo.toml: dataproc/v1beta2/spec.json $(MCP)
	$(MCP) generate $< dataproc/v1beta2
dataproc1_beta2: dataproc/v1beta2/lib/Cargo.toml
dataproc1_beta2-cargo: dataproc1_beta2
	cd dataproc/v1beta2 && cargo $(ARGS)

datastore/v1/lib/Cargo.toml: datastore/v1/spec.json $(MCP)
	$(MCP) generate $< datastore/v1
datastore1: datastore/v1/lib/Cargo.toml
datastore1-cargo: datastore1
	cd datastore/v1 && cargo $(ARGS)

datastore/v1beta1/lib/Cargo.toml: datastore/v1beta1/spec.json $(MCP)
	$(MCP) generate $< datastore/v1beta1
datastore1_beta1: datastore/v1beta1/lib/Cargo.toml
datastore1_beta1-cargo: datastore1_beta1
	cd datastore/v1beta1 && cargo $(ARGS)

datastore/v1beta3/lib/Cargo.toml: datastore/v1beta3/spec.json $(MCP)
	$(MCP) generate $< datastore/v1beta3
datastore1_beta3: datastore/v1beta3/lib/Cargo.toml
datastore1_beta3-cargo: datastore1_beta3
	cd datastore/v1beta3 && cargo $(ARGS)

deploymentmanager/alpha/lib/Cargo.toml: deploymentmanager/alpha/spec.json $(MCP)
	$(MCP) generate $< deploymentmanager/alpha
deploymentmanageralpha: deploymentmanager/alpha/lib/Cargo.toml
deploymentmanageralpha-cargo: deploymentmanageralpha
	cd deploymentmanager/alpha && cargo $(ARGS)

deploymentmanager/v2beta/lib/Cargo.toml: deploymentmanager/v2beta/spec.json $(MCP)
	$(MCP) generate $< deploymentmanager/v2beta
deploymentmanager2_beta: deploymentmanager/v2beta/lib/Cargo.toml
deploymentmanager2_beta-cargo: deploymentmanager2_beta
	cd deploymentmanager/v2beta && cargo $(ARGS)

deploymentmanager/v2/lib/Cargo.toml: deploymentmanager/v2/spec.json $(MCP)
	$(MCP) generate $< deploymentmanager/v2
deploymentmanager2: deploymentmanager/v2/lib/Cargo.toml
deploymentmanager2-cargo: deploymentmanager2
	cd deploymentmanager/v2 && cargo $(ARGS)

dfareporting/v3.1/lib/Cargo.toml: dfareporting/v3.1/spec.json $(MCP)
	$(MCP) generate $< dfareporting/v3.1
dfareporting3d1: dfareporting/v3.1/lib/Cargo.toml
dfareporting3d1-cargo: dfareporting3d1
	cd dfareporting/v3.1 && cargo $(ARGS)

dfareporting/v3.2/lib/Cargo.toml: dfareporting/v3.2/spec.json $(MCP)
	$(MCP) generate $< dfareporting/v3.2
dfareporting3d2: dfareporting/v3.2/lib/Cargo.toml
dfareporting3d2-cargo: dfareporting3d2
	cd dfareporting/v3.2 && cargo $(ARGS)

dfareporting/v3.3/lib/Cargo.toml: dfareporting/v3.3/spec.json $(MCP)
	$(MCP) generate $< dfareporting/v3.3
dfareporting3d3: dfareporting/v3.3/lib/Cargo.toml
dfareporting3d3-cargo: dfareporting3d3
	cd dfareporting/v3.3 && cargo $(ARGS)

dialogflow/v2/lib/Cargo.toml: dialogflow/v2/spec.json $(MCP)
	$(MCP) generate $< dialogflow/v2
dialogflow2: dialogflow/v2/lib/Cargo.toml
dialogflow2-cargo: dialogflow2
	cd dialogflow/v2 && cargo $(ARGS)

dialogflow/v2beta1/lib/Cargo.toml: dialogflow/v2beta1/spec.json $(MCP)
	$(MCP) generate $< dialogflow/v2beta1
dialogflow2_beta1: dialogflow/v2beta1/lib/Cargo.toml
dialogflow2_beta1-cargo: dialogflow2_beta1
	cd dialogflow/v2beta1 && cargo $(ARGS)

digitalassetlinks/v1/lib/Cargo.toml: digitalassetlinks/v1/spec.json $(MCP)
	$(MCP) generate $< digitalassetlinks/v1
digitalassetlinks1: digitalassetlinks/v1/lib/Cargo.toml
digitalassetlinks1-cargo: digitalassetlinks1
	cd digitalassetlinks/v1 && cargo $(ARGS)

discovery/v1/lib/Cargo.toml: discovery/v1/spec.json $(MCP)
	$(MCP) generate $< discovery/v1
discovery1: discovery/v1/lib/Cargo.toml
discovery1-cargo: discovery1
	cd discovery/v1 && cargo $(ARGS)

dlp/v2/lib/Cargo.toml: dlp/v2/spec.json $(MCP)
	$(MCP) generate $< dlp/v2
dlp2: dlp/v2/lib/Cargo.toml
dlp2-cargo: dlp2
	cd dlp/v2 && cargo $(ARGS)

dns/v1/lib/Cargo.toml: dns/v1/spec.json $(MCP)
	$(MCP) generate $< dns/v1
dns1: dns/v1/lib/Cargo.toml
dns1-cargo: dns1
	cd dns/v1 && cargo $(ARGS)

dns/v1beta2/lib/Cargo.toml: dns/v1beta2/spec.json $(MCP)
	$(MCP) generate $< dns/v1beta2
dns1_beta2: dns/v1beta2/lib/Cargo.toml
dns1_beta2-cargo: dns1_beta2
	cd dns/v1beta2 && cargo $(ARGS)

dns/v2beta1/lib/Cargo.toml: dns/v2beta1/spec.json $(MCP)
	$(MCP) generate $< dns/v2beta1
dns2_beta1: dns/v2beta1/lib/Cargo.toml
dns2_beta1-cargo: dns2_beta1
	cd dns/v2beta1 && cargo $(ARGS)

docs/v1/lib/Cargo.toml: docs/v1/spec.json $(MCP)
	$(MCP) generate $< docs/v1
docs1: docs/v1/lib/Cargo.toml
docs1-cargo: docs1
	cd docs/v1 && cargo $(ARGS)

doubleclickbidmanager/v1/lib/Cargo.toml: doubleclickbidmanager/v1/spec.json $(MCP)
	$(MCP) generate $< doubleclickbidmanager/v1
doubleclickbidmanager1: doubleclickbidmanager/v1/lib/Cargo.toml
doubleclickbidmanager1-cargo: doubleclickbidmanager1
	cd doubleclickbidmanager/v1 && cargo $(ARGS)

doubleclicksearch/v2/lib/Cargo.toml: doubleclicksearch/v2/spec.json $(MCP)
	$(MCP) generate $< doubleclicksearch/v2
doubleclicksearch2: doubleclicksearch/v2/lib/Cargo.toml
doubleclicksearch2-cargo: doubleclicksearch2
	cd doubleclicksearch/v2 && cargo $(ARGS)

drive/v2/lib/Cargo.toml: drive/v2/spec.json $(MCP)
	$(MCP) generate $< drive/v2
drive2: drive/v2/lib/Cargo.toml
drive2-cargo: drive2
	cd drive/v2 && cargo $(ARGS)

drive/v3/lib/Cargo.toml: drive/v3/spec.json $(MCP)
	$(MCP) generate $< drive/v3
drive3: drive/v3/lib/Cargo.toml
drive3-cargo: drive3
	cd drive/v3 && cargo $(ARGS)

driveactivity/v2/lib/Cargo.toml: driveactivity/v2/spec.json $(MCP)
	$(MCP) generate $< driveactivity/v2
driveactivity2: driveactivity/v2/lib/Cargo.toml
driveactivity2-cargo: driveactivity2
	cd driveactivity/v2 && cargo $(ARGS)

factchecktools/v1alpha1/lib/Cargo.toml: factchecktools/v1alpha1/spec.json $(MCP)
	$(MCP) generate $< factchecktools/v1alpha1
factchecktools1_alpha1: factchecktools/v1alpha1/lib/Cargo.toml
factchecktools1_alpha1-cargo: factchecktools1_alpha1
	cd factchecktools/v1alpha1 && cargo $(ARGS)

fcm/v1/lib/Cargo.toml: fcm/v1/spec.json $(MCP)
	$(MCP) generate $< fcm/v1
fcm1: fcm/v1/lib/Cargo.toml
fcm1-cargo: fcm1
	cd fcm/v1 && cargo $(ARGS)

file/v1/lib/Cargo.toml: file/v1/spec.json $(MCP)
	$(MCP) generate $< file/v1
file1: file/v1/lib/Cargo.toml
file1-cargo: file1
	cd file/v1 && cargo $(ARGS)

file/v1beta1/lib/Cargo.toml: file/v1beta1/spec.json $(MCP)
	$(MCP) generate $< file/v1beta1
file1_beta1: file/v1beta1/lib/Cargo.toml
file1_beta1-cargo: file1_beta1
	cd file/v1beta1 && cargo $(ARGS)

firebase/v1beta1/lib/Cargo.toml: firebase/v1beta1/spec.json $(MCP)
	$(MCP) generate $< firebase/v1beta1
firebase1_beta1: firebase/v1beta1/lib/Cargo.toml
firebase1_beta1-cargo: firebase1_beta1
	cd firebase/v1beta1 && cargo $(ARGS)

firebasedynamiclinks/v1/lib/Cargo.toml: firebasedynamiclinks/v1/spec.json $(MCP)
	$(MCP) generate $< firebasedynamiclinks/v1
firebasedynamiclinks1: firebasedynamiclinks/v1/lib/Cargo.toml
firebasedynamiclinks1-cargo: firebasedynamiclinks1
	cd firebasedynamiclinks/v1 && cargo $(ARGS)

firebasehosting/v1beta1/lib/Cargo.toml: firebasehosting/v1beta1/spec.json $(MCP)
	$(MCP) generate $< firebasehosting/v1beta1
firebasehosting1_beta1: firebasehosting/v1beta1/lib/Cargo.toml
firebasehosting1_beta1-cargo: firebasehosting1_beta1
	cd firebasehosting/v1beta1 && cargo $(ARGS)

firebaserules/v1/lib/Cargo.toml: firebaserules/v1/spec.json $(MCP)
	$(MCP) generate $< firebaserules/v1
firebaserules1: firebaserules/v1/lib/Cargo.toml
firebaserules1-cargo: firebaserules1
	cd firebaserules/v1 && cargo $(ARGS)

firestore/v1/lib/Cargo.toml: firestore/v1/spec.json $(MCP)
	$(MCP) generate $< firestore/v1
firestore1: firestore/v1/lib/Cargo.toml
firestore1-cargo: firestore1
	cd firestore/v1 && cargo $(ARGS)

firestore/v1beta1/lib/Cargo.toml: firestore/v1beta1/spec.json $(MCP)
	$(MCP) generate $< firestore/v1beta1
firestore1_beta1: firestore/v1beta1/lib/Cargo.toml
firestore1_beta1-cargo: firestore1_beta1
	cd firestore/v1beta1 && cargo $(ARGS)

firestore/v1beta2/lib/Cargo.toml: firestore/v1beta2/spec.json $(MCP)
	$(MCP) generate $< firestore/v1beta2
firestore1_beta2: firestore/v1beta2/lib/Cargo.toml
firestore1_beta2-cargo: firestore1_beta2
	cd firestore/v1beta2 && cargo $(ARGS)

fitness/v1/lib/Cargo.toml: fitness/v1/spec.json $(MCP)
	$(MCP) generate $< fitness/v1
fitness1: fitness/v1/lib/Cargo.toml
fitness1-cargo: fitness1
	cd fitness/v1 && cargo $(ARGS)

fusiontables/v1/lib/Cargo.toml: fusiontables/v1/spec.json $(MCP)
	$(MCP) generate $< fusiontables/v1
fusiontables1: fusiontables/v1/lib/Cargo.toml
fusiontables1-cargo: fusiontables1
	cd fusiontables/v1 && cargo $(ARGS)

fusiontables/v2/lib/Cargo.toml: fusiontables/v2/spec.json $(MCP)
	$(MCP) generate $< fusiontables/v2
fusiontables2: fusiontables/v2/lib/Cargo.toml
fusiontables2-cargo: fusiontables2
	cd fusiontables/v2 && cargo $(ARGS)

games/v1/lib/Cargo.toml: games/v1/spec.json $(MCP)
	$(MCP) generate $< games/v1
games1: games/v1/lib/Cargo.toml
games1-cargo: games1
	cd games/v1 && cargo $(ARGS)

gamesConfiguration/v1configuration/lib/Cargo.toml: gamesConfiguration/v1configuration/spec.json $(MCP)
	$(MCP) generate $< gamesConfiguration/v1configuration
gamesConfiguration1_configuration: gamesConfiguration/v1configuration/lib/Cargo.toml
gamesConfiguration1_configuration-cargo: gamesConfiguration1_configuration
	cd gamesConfiguration/v1configuration && cargo $(ARGS)

gamesManagement/v1management/lib/Cargo.toml: gamesManagement/v1management/spec.json $(MCP)
	$(MCP) generate $< gamesManagement/v1management
gamesManagement1_management: gamesManagement/v1management/lib/Cargo.toml
gamesManagement1_management-cargo: gamesManagement1_management
	cd gamesManagement/v1management && cargo $(ARGS)

genomics/v1alpha2/lib/Cargo.toml: genomics/v1alpha2/spec.json $(MCP)
	$(MCP) generate $< genomics/v1alpha2
genomics1_alpha2: genomics/v1alpha2/lib/Cargo.toml
genomics1_alpha2-cargo: genomics1_alpha2
	cd genomics/v1alpha2 && cargo $(ARGS)

genomics/v2alpha1/lib/Cargo.toml: genomics/v2alpha1/spec.json $(MCP)
	$(MCP) generate $< genomics/v2alpha1
genomics2_alpha1: genomics/v2alpha1/lib/Cargo.toml
genomics2_alpha1-cargo: genomics2_alpha1
	cd genomics/v2alpha1 && cargo $(ARGS)

genomics/v1/lib/Cargo.toml: genomics/v1/spec.json $(MCP)
	$(MCP) generate $< genomics/v1
genomics1: genomics/v1/lib/Cargo.toml
genomics1-cargo: genomics1
	cd genomics/v1 && cargo $(ARGS)

gmail/v1/lib/Cargo.toml: gmail/v1/spec.json $(MCP)
	$(MCP) generate $< gmail/v1
gmail1: gmail/v1/lib/Cargo.toml
gmail1-cargo: gmail1
	cd gmail/v1 && cargo $(ARGS)

groupsmigration/v1/lib/Cargo.toml: groupsmigration/v1/spec.json $(MCP)
	$(MCP) generate $< groupsmigration/v1
groupsmigration1: groupsmigration/v1/lib/Cargo.toml
groupsmigration1-cargo: groupsmigration1
	cd groupsmigration/v1 && cargo $(ARGS)

groupssettings/v1/lib/Cargo.toml: groupssettings/v1/spec.json $(MCP)
	$(MCP) generate $< groupssettings/v1
groupssettings1: groupssettings/v1/lib/Cargo.toml
groupssettings1-cargo: groupssettings1
	cd groupssettings/v1 && cargo $(ARGS)

healthcare/v1alpha2/lib/Cargo.toml: healthcare/v1alpha2/spec.json $(MCP)
	$(MCP) generate $< healthcare/v1alpha2
healthcare1_alpha2: healthcare/v1alpha2/lib/Cargo.toml
healthcare1_alpha2-cargo: healthcare1_alpha2
	cd healthcare/v1alpha2 && cargo $(ARGS)

healthcare/v1beta1/lib/Cargo.toml: healthcare/v1beta1/spec.json $(MCP)
	$(MCP) generate $< healthcare/v1beta1
healthcare1_beta1: healthcare/v1beta1/lib/Cargo.toml
healthcare1_beta1-cargo: healthcare1_beta1
	cd healthcare/v1beta1 && cargo $(ARGS)

iam/v1/lib/Cargo.toml: iam/v1/spec.json $(MCP)
	$(MCP) generate $< iam/v1
iam1: iam/v1/lib/Cargo.toml
iam1-cargo: iam1
	cd iam/v1 && cargo $(ARGS)

iamcredentials/v1/lib/Cargo.toml: iamcredentials/v1/spec.json $(MCP)
	$(MCP) generate $< iamcredentials/v1
iamcredentials1: iamcredentials/v1/lib/Cargo.toml
iamcredentials1-cargo: iamcredentials1
	cd iamcredentials/v1 && cargo $(ARGS)

iap/v1/lib/Cargo.toml: iap/v1/spec.json $(MCP)
	$(MCP) generate $< iap/v1
iap1: iap/v1/lib/Cargo.toml
iap1-cargo: iap1
	cd iap/v1 && cargo $(ARGS)

iap/v1beta1/lib/Cargo.toml: iap/v1beta1/spec.json $(MCP)
	$(MCP) generate $< iap/v1beta1
iap1_beta1: iap/v1beta1/lib/Cargo.toml
iap1_beta1-cargo: iap1_beta1
	cd iap/v1beta1 && cargo $(ARGS)

identitytoolkit/v3/lib/Cargo.toml: identitytoolkit/v3/spec.json $(MCP)
	$(MCP) generate $< identitytoolkit/v3
identitytoolkit3: identitytoolkit/v3/lib/Cargo.toml
identitytoolkit3-cargo: identitytoolkit3
	cd identitytoolkit/v3 && cargo $(ARGS)

indexing/v3/lib/Cargo.toml: indexing/v3/spec.json $(MCP)
	$(MCP) generate $< indexing/v3
indexing3: indexing/v3/lib/Cargo.toml
indexing3-cargo: indexing3
	cd indexing/v3 && cargo $(ARGS)

jobs/v3p1beta1/lib/Cargo.toml: jobs/v3p1beta1/spec.json $(MCP)
	$(MCP) generate $< jobs/v3p1beta1
jobs3_p1beta1: jobs/v3p1beta1/lib/Cargo.toml
jobs3_p1beta1-cargo: jobs3_p1beta1
	cd jobs/v3p1beta1 && cargo $(ARGS)

jobs/v2/lib/Cargo.toml: jobs/v2/spec.json $(MCP)
	$(MCP) generate $< jobs/v2
jobs2: jobs/v2/lib/Cargo.toml
jobs2-cargo: jobs2
	cd jobs/v2 && cargo $(ARGS)

jobs/v3/lib/Cargo.toml: jobs/v3/spec.json $(MCP)
	$(MCP) generate $< jobs/v3
jobs3: jobs/v3/lib/Cargo.toml
jobs3-cargo: jobs3
	cd jobs/v3 && cargo $(ARGS)

kgsearch/v1/lib/Cargo.toml: kgsearch/v1/spec.json $(MCP)
	$(MCP) generate $< kgsearch/v1
kgsearch1: kgsearch/v1/lib/Cargo.toml
kgsearch1-cargo: kgsearch1
	cd kgsearch/v1 && cargo $(ARGS)

language/v1/lib/Cargo.toml: language/v1/spec.json $(MCP)
	$(MCP) generate $< language/v1
language1: language/v1/lib/Cargo.toml
language1-cargo: language1
	cd language/v1 && cargo $(ARGS)

language/v1beta1/lib/Cargo.toml: language/v1beta1/spec.json $(MCP)
	$(MCP) generate $< language/v1beta1
language1_beta1: language/v1beta1/lib/Cargo.toml
language1_beta1-cargo: language1_beta1
	cd language/v1beta1 && cargo $(ARGS)

language/v1beta2/lib/Cargo.toml: language/v1beta2/spec.json $(MCP)
	$(MCP) generate $< language/v1beta2
language1_beta2: language/v1beta2/lib/Cargo.toml
language1_beta2-cargo: language1_beta2
	cd language/v1beta2 && cargo $(ARGS)

libraryagent/v1/lib/Cargo.toml: libraryagent/v1/spec.json $(MCP)
	$(MCP) generate $< libraryagent/v1
libraryagent1: libraryagent/v1/lib/Cargo.toml
libraryagent1-cargo: libraryagent1
	cd libraryagent/v1 && cargo $(ARGS)

licensing/v1/lib/Cargo.toml: licensing/v1/spec.json $(MCP)
	$(MCP) generate $< licensing/v1
licensing1: licensing/v1/lib/Cargo.toml
licensing1-cargo: licensing1
	cd licensing/v1 && cargo $(ARGS)

logging/v2/lib/Cargo.toml: logging/v2/spec.json $(MCP)
	$(MCP) generate $< logging/v2
logging2: logging/v2/lib/Cargo.toml
logging2-cargo: logging2
	cd logging/v2 && cargo $(ARGS)

manufacturers/v1/lib/Cargo.toml: manufacturers/v1/spec.json $(MCP)
	$(MCP) generate $< manufacturers/v1
manufacturers1: manufacturers/v1/lib/Cargo.toml
manufacturers1-cargo: manufacturers1
	cd manufacturers/v1 && cargo $(ARGS)

mirror/v1/lib/Cargo.toml: mirror/v1/spec.json $(MCP)
	$(MCP) generate $< mirror/v1
mirror1: mirror/v1/lib/Cargo.toml
mirror1-cargo: mirror1
	cd mirror/v1 && cargo $(ARGS)

ml/v1/lib/Cargo.toml: ml/v1/spec.json $(MCP)
	$(MCP) generate $< ml/v1
ml1: ml/v1/lib/Cargo.toml
ml1-cargo: ml1
	cd ml/v1 && cargo $(ARGS)

monitoring/v3/lib/Cargo.toml: monitoring/v3/spec.json $(MCP)
	$(MCP) generate $< monitoring/v3
monitoring3: monitoring/v3/lib/Cargo.toml
monitoring3-cargo: monitoring3
	cd monitoring/v3 && cargo $(ARGS)

oauth/v1/lib/Cargo.toml: oauth/v1/spec.json $(MCP)
	$(MCP) generate $< oauth/v1
oauth1: oauth/v1/lib/Cargo.toml
oauth1-cargo: oauth1
	cd oauth/v1 && cargo $(ARGS)

oauth/v2/lib/Cargo.toml: oauth/v2/spec.json $(MCP)
	$(MCP) generate $< oauth/v2
oauth2: oauth/v2/lib/Cargo.toml
oauth2-cargo: oauth2
	cd oauth/v2 && cargo $(ARGS)

oslogin/v1alpha/lib/Cargo.toml: oslogin/v1alpha/spec.json $(MCP)
	$(MCP) generate $< oslogin/v1alpha
oslogin1_alpha: oslogin/v1alpha/lib/Cargo.toml
oslogin1_alpha-cargo: oslogin1_alpha
	cd oslogin/v1alpha && cargo $(ARGS)

oslogin/v1beta/lib/Cargo.toml: oslogin/v1beta/spec.json $(MCP)
	$(MCP) generate $< oslogin/v1beta
oslogin1_beta: oslogin/v1beta/lib/Cargo.toml
oslogin1_beta-cargo: oslogin1_beta
	cd oslogin/v1beta && cargo $(ARGS)

oslogin/v1/lib/Cargo.toml: oslogin/v1/spec.json $(MCP)
	$(MCP) generate $< oslogin/v1
oslogin1: oslogin/v1/lib/Cargo.toml
oslogin1-cargo: oslogin1
	cd oslogin/v1 && cargo $(ARGS)

pagespeedonline/v1/lib/Cargo.toml: pagespeedonline/v1/spec.json $(MCP)
	$(MCP) generate $< pagespeedonline/v1
pagespeedonline1: pagespeedonline/v1/lib/Cargo.toml
pagespeedonline1-cargo: pagespeedonline1
	cd pagespeedonline/v1 && cargo $(ARGS)

pagespeedonline/v2/lib/Cargo.toml: pagespeedonline/v2/spec.json $(MCP)
	$(MCP) generate $< pagespeedonline/v2
pagespeedonline2: pagespeedonline/v2/lib/Cargo.toml
pagespeedonline2-cargo: pagespeedonline2
	cd pagespeedonline/v2 && cargo $(ARGS)

pagespeedonline/v4/lib/Cargo.toml: pagespeedonline/v4/spec.json $(MCP)
	$(MCP) generate $< pagespeedonline/v4
pagespeedonline4: pagespeedonline/v4/lib/Cargo.toml
pagespeedonline4-cargo: pagespeedonline4
	cd pagespeedonline/v4 && cargo $(ARGS)

pagespeedonline/v5/lib/Cargo.toml: pagespeedonline/v5/spec.json $(MCP)
	$(MCP) generate $< pagespeedonline/v5
pagespeedonline5: pagespeedonline/v5/lib/Cargo.toml
pagespeedonline5-cargo: pagespeedonline5
	cd pagespeedonline/v5 && cargo $(ARGS)

people/v1/lib/Cargo.toml: people/v1/spec.json $(MCP)
	$(MCP) generate $< people/v1
people1: people/v1/lib/Cargo.toml
people1-cargo: people1
	cd people/v1 && cargo $(ARGS)

playcustomapp/v1/lib/Cargo.toml: playcustomapp/v1/spec.json $(MCP)
	$(MCP) generate $< playcustomapp/v1
playcustomapp1: playcustomapp/v1/lib/Cargo.toml
playcustomapp1-cargo: playcustomapp1
	cd playcustomapp/v1 && cargo $(ARGS)

plus/v1/lib/Cargo.toml: plus/v1/spec.json $(MCP)
	$(MCP) generate $< plus/v1
plus1: plus/v1/lib/Cargo.toml
plus1-cargo: plus1
	cd plus/v1 && cargo $(ARGS)

plusDomains/v1/lib/Cargo.toml: plusDomains/v1/spec.json $(MCP)
	$(MCP) generate $< plusDomains/v1
plusDomains1: plusDomains/v1/lib/Cargo.toml
plusDomains1-cargo: plusDomains1
	cd plusDomains/v1 && cargo $(ARGS)

poly/v1/lib/Cargo.toml: poly/v1/spec.json $(MCP)
	$(MCP) generate $< poly/v1
poly1: poly/v1/lib/Cargo.toml
poly1-cargo: poly1
	cd poly/v1 && cargo $(ARGS)

proximitybeacon/v1beta1/lib/Cargo.toml: proximitybeacon/v1beta1/spec.json $(MCP)
	$(MCP) generate $< proximitybeacon/v1beta1
proximitybeacon1_beta1: proximitybeacon/v1beta1/lib/Cargo.toml
proximitybeacon1_beta1-cargo: proximitybeacon1_beta1
	cd proximitybeacon/v1beta1 && cargo $(ARGS)

pubsub/v1beta1a/lib/Cargo.toml: pubsub/v1beta1a/spec.json $(MCP)
	$(MCP) generate $< pubsub/v1beta1a
pubsub1_beta1a: pubsub/v1beta1a/lib/Cargo.toml
pubsub1_beta1a-cargo: pubsub1_beta1a
	cd pubsub/v1beta1a && cargo $(ARGS)

pubsub/v1/lib/Cargo.toml: pubsub/v1/spec.json $(MCP)
	$(MCP) generate $< pubsub/v1
pubsub1: pubsub/v1/lib/Cargo.toml
pubsub1-cargo: pubsub1
	cd pubsub/v1 && cargo $(ARGS)

pubsub/v1beta2/lib/Cargo.toml: pubsub/v1beta2/spec.json $(MCP)
	$(MCP) generate $< pubsub/v1beta2
pubsub1_beta2: pubsub/v1beta2/lib/Cargo.toml
pubsub1_beta2-cargo: pubsub1_beta2
	cd pubsub/v1beta2 && cargo $(ARGS)

redis/v1/lib/Cargo.toml: redis/v1/spec.json $(MCP)
	$(MCP) generate $< redis/v1
redis1: redis/v1/lib/Cargo.toml
redis1-cargo: redis1
	cd redis/v1 && cargo $(ARGS)

redis/v1beta1/lib/Cargo.toml: redis/v1beta1/spec.json $(MCP)
	$(MCP) generate $< redis/v1beta1
redis1_beta1: redis/v1beta1/lib/Cargo.toml
redis1_beta1-cargo: redis1_beta1
	cd redis/v1beta1 && cargo $(ARGS)

remotebuildexecution/v1alpha/lib/Cargo.toml: remotebuildexecution/v1alpha/spec.json $(MCP)
	$(MCP) generate $< remotebuildexecution/v1alpha
remotebuildexecution1_alpha: remotebuildexecution/v1alpha/lib/Cargo.toml
remotebuildexecution1_alpha-cargo: remotebuildexecution1_alpha
	cd remotebuildexecution/v1alpha && cargo $(ARGS)

remotebuildexecution/v1/lib/Cargo.toml: remotebuildexecution/v1/spec.json $(MCP)
	$(MCP) generate $< remotebuildexecution/v1
remotebuildexecution1: remotebuildexecution/v1/lib/Cargo.toml
remotebuildexecution1-cargo: remotebuildexecution1
	cd remotebuildexecution/v1 && cargo $(ARGS)

remotebuildexecution/v2/lib/Cargo.toml: remotebuildexecution/v2/spec.json $(MCP)
	$(MCP) generate $< remotebuildexecution/v2
remotebuildexecution2: remotebuildexecution/v2/lib/Cargo.toml
remotebuildexecution2-cargo: remotebuildexecution2
	cd remotebuildexecution/v2 && cargo $(ARGS)

replicapool/v1beta1/lib/Cargo.toml: replicapool/v1beta1/spec.json $(MCP)
	$(MCP) generate $< replicapool/v1beta1
replicapool1_beta1: replicapool/v1beta1/lib/Cargo.toml
replicapool1_beta1-cargo: replicapool1_beta1
	cd replicapool/v1beta1 && cargo $(ARGS)

reseller/v1/lib/Cargo.toml: reseller/v1/spec.json $(MCP)
	$(MCP) generate $< reseller/v1
reseller1: reseller/v1/lib/Cargo.toml
reseller1-cargo: reseller1
	cd reseller/v1 && cargo $(ARGS)

run/v1alpha1/lib/Cargo.toml: run/v1alpha1/spec.json $(MCP)
	$(MCP) generate $< run/v1alpha1
run1_alpha1: run/v1alpha1/lib/Cargo.toml
run1_alpha1-cargo: run1_alpha1
	cd run/v1alpha1 && cargo $(ARGS)

run/v1/lib/Cargo.toml: run/v1/spec.json $(MCP)
	$(MCP) generate $< run/v1
run1: run/v1/lib/Cargo.toml
run1-cargo: run1
	cd run/v1 && cargo $(ARGS)

runtimeconfig/v1/lib/Cargo.toml: runtimeconfig/v1/spec.json $(MCP)
	$(MCP) generate $< runtimeconfig/v1
runtimeconfig1: runtimeconfig/v1/lib/Cargo.toml
runtimeconfig1-cargo: runtimeconfig1
	cd runtimeconfig/v1 && cargo $(ARGS)

runtimeconfig/v1beta1/lib/Cargo.toml: runtimeconfig/v1beta1/spec.json $(MCP)
	$(MCP) generate $< runtimeconfig/v1beta1
runtimeconfig1_beta1: runtimeconfig/v1beta1/lib/Cargo.toml
runtimeconfig1_beta1-cargo: runtimeconfig1_beta1
	cd runtimeconfig/v1beta1 && cargo $(ARGS)

safebrowsing/v4/lib/Cargo.toml: safebrowsing/v4/spec.json $(MCP)
	$(MCP) generate $< safebrowsing/v4
safebrowsing4: safebrowsing/v4/lib/Cargo.toml
safebrowsing4-cargo: safebrowsing4
	cd safebrowsing/v4 && cargo $(ARGS)

script/v1/lib/Cargo.toml: script/v1/spec.json $(MCP)
	$(MCP) generate $< script/v1
script1: script/v1/lib/Cargo.toml
script1-cargo: script1
	cd script/v1 && cargo $(ARGS)

searchconsole/v1/lib/Cargo.toml: searchconsole/v1/spec.json $(MCP)
	$(MCP) generate $< searchconsole/v1
searchconsole1: searchconsole/v1/lib/Cargo.toml
searchconsole1-cargo: searchconsole1
	cd searchconsole/v1 && cargo $(ARGS)

securitycenter/v1p1alpha1/lib/Cargo.toml: securitycenter/v1p1alpha1/spec.json $(MCP)
	$(MCP) generate $< securitycenter/v1p1alpha1
securitycenter1_p1alpha1: securitycenter/v1p1alpha1/lib/Cargo.toml
securitycenter1_p1alpha1-cargo: securitycenter1_p1alpha1
	cd securitycenter/v1p1alpha1 && cargo $(ARGS)

securitycenter/v1/lib/Cargo.toml: securitycenter/v1/spec.json $(MCP)
	$(MCP) generate $< securitycenter/v1
securitycenter1: securitycenter/v1/lib/Cargo.toml
securitycenter1-cargo: securitycenter1
	cd securitycenter/v1 && cargo $(ARGS)

securitycenter/v1beta1/lib/Cargo.toml: securitycenter/v1beta1/spec.json $(MCP)
	$(MCP) generate $< securitycenter/v1beta1
securitycenter1_beta1: securitycenter/v1beta1/lib/Cargo.toml
securitycenter1_beta1-cargo: securitycenter1_beta1
	cd securitycenter/v1beta1 && cargo $(ARGS)

servicebroker/v1alpha1/lib/Cargo.toml: servicebroker/v1alpha1/spec.json $(MCP)
	$(MCP) generate $< servicebroker/v1alpha1
servicebroker1_alpha1: servicebroker/v1alpha1/lib/Cargo.toml
servicebroker1_alpha1-cargo: servicebroker1_alpha1
	cd servicebroker/v1alpha1 && cargo $(ARGS)

servicebroker/v1/lib/Cargo.toml: servicebroker/v1/spec.json $(MCP)
	$(MCP) generate $< servicebroker/v1
servicebroker1: servicebroker/v1/lib/Cargo.toml
servicebroker1-cargo: servicebroker1
	cd servicebroker/v1 && cargo $(ARGS)

servicebroker/v1beta1/lib/Cargo.toml: servicebroker/v1beta1/spec.json $(MCP)
	$(MCP) generate $< servicebroker/v1beta1
servicebroker1_beta1: servicebroker/v1beta1/lib/Cargo.toml
servicebroker1_beta1-cargo: servicebroker1_beta1
	cd servicebroker/v1beta1 && cargo $(ARGS)

serviceconsumermanagement/v1/lib/Cargo.toml: serviceconsumermanagement/v1/spec.json $(MCP)
	$(MCP) generate $< serviceconsumermanagement/v1
serviceconsumermanagement1: serviceconsumermanagement/v1/lib/Cargo.toml
serviceconsumermanagement1-cargo: serviceconsumermanagement1
	cd serviceconsumermanagement/v1 && cargo $(ARGS)

servicecontrol/v1/lib/Cargo.toml: servicecontrol/v1/spec.json $(MCP)
	$(MCP) generate $< servicecontrol/v1
servicecontrol1: servicecontrol/v1/lib/Cargo.toml
servicecontrol1-cargo: servicecontrol1
	cd servicecontrol/v1 && cargo $(ARGS)

servicemanagement/v1/lib/Cargo.toml: servicemanagement/v1/spec.json $(MCP)
	$(MCP) generate $< servicemanagement/v1
servicemanagement1: servicemanagement/v1/lib/Cargo.toml
servicemanagement1-cargo: servicemanagement1
	cd servicemanagement/v1 && cargo $(ARGS)

servicenetworking/v1beta/lib/Cargo.toml: servicenetworking/v1beta/spec.json $(MCP)
	$(MCP) generate $< servicenetworking/v1beta
servicenetworking1_beta: servicenetworking/v1beta/lib/Cargo.toml
servicenetworking1_beta-cargo: servicenetworking1_beta
	cd servicenetworking/v1beta && cargo $(ARGS)

servicenetworking/v1/lib/Cargo.toml: servicenetworking/v1/spec.json $(MCP)
	$(MCP) generate $< servicenetworking/v1
servicenetworking1: servicenetworking/v1/lib/Cargo.toml
servicenetworking1-cargo: servicenetworking1
	cd servicenetworking/v1 && cargo $(ARGS)

serviceusage/v1/lib/Cargo.toml: serviceusage/v1/spec.json $(MCP)
	$(MCP) generate $< serviceusage/v1
serviceusage1: serviceusage/v1/lib/Cargo.toml
serviceusage1-cargo: serviceusage1
	cd serviceusage/v1 && cargo $(ARGS)

serviceusage/v1beta1/lib/Cargo.toml: serviceusage/v1beta1/spec.json $(MCP)
	$(MCP) generate $< serviceusage/v1beta1
serviceusage1_beta1: serviceusage/v1beta1/lib/Cargo.toml
serviceusage1_beta1-cargo: serviceusage1_beta1
	cd serviceusage/v1beta1 && cargo $(ARGS)

sheets/v4/lib/Cargo.toml: sheets/v4/spec.json $(MCP)
	$(MCP) generate $< sheets/v4
sheets4: sheets/v4/lib/Cargo.toml
sheets4-cargo: sheets4
	cd sheets/v4 && cargo $(ARGS)

siteVerification/v1/lib/Cargo.toml: siteVerification/v1/spec.json $(MCP)
	$(MCP) generate $< siteVerification/v1
siteVerification1: siteVerification/v1/lib/Cargo.toml
siteVerification1-cargo: siteVerification1
	cd siteVerification/v1 && cargo $(ARGS)

slides/v1/lib/Cargo.toml: slides/v1/spec.json $(MCP)
	$(MCP) generate $< slides/v1
slides1: slides/v1/lib/Cargo.toml
slides1-cargo: slides1
	cd slides/v1 && cargo $(ARGS)

sourcerepo/v1/lib/Cargo.toml: sourcerepo/v1/spec.json $(MCP)
	$(MCP) generate $< sourcerepo/v1
sourcerepo1: sourcerepo/v1/lib/Cargo.toml
sourcerepo1-cargo: sourcerepo1
	cd sourcerepo/v1 && cargo $(ARGS)

spanner/v1/lib/Cargo.toml: spanner/v1/spec.json $(MCP)
	$(MCP) generate $< spanner/v1
spanner1: spanner/v1/lib/Cargo.toml
spanner1-cargo: spanner1
	cd spanner/v1 && cargo $(ARGS)

speech/v1p1beta1/lib/Cargo.toml: speech/v1p1beta1/spec.json $(MCP)
	$(MCP) generate $< speech/v1p1beta1
speech1_p1beta1: speech/v1p1beta1/lib/Cargo.toml
speech1_p1beta1-cargo: speech1_p1beta1
	cd speech/v1p1beta1 && cargo $(ARGS)

speech/v1/lib/Cargo.toml: speech/v1/spec.json $(MCP)
	$(MCP) generate $< speech/v1
speech1: speech/v1/lib/Cargo.toml
speech1-cargo: speech1
	cd speech/v1 && cargo $(ARGS)

sqladmin/v1beta4/lib/Cargo.toml: sqladmin/v1beta4/spec.json $(MCP)
	$(MCP) generate $< sqladmin/v1beta4
sqladmin1_beta4: sqladmin/v1beta4/lib/Cargo.toml
sqladmin1_beta4-cargo: sqladmin1_beta4
	cd sqladmin/v1beta4 && cargo $(ARGS)

storage/v1/lib/Cargo.toml: storage/v1/spec.json $(MCP)
	$(MCP) generate $< storage/v1
storage1: storage/v1/lib/Cargo.toml
storage1-cargo: storage1
	cd storage/v1 && cargo $(ARGS)

storage/v1beta1/lib/Cargo.toml: storage/v1beta1/spec.json $(MCP)
	$(MCP) generate $< storage/v1beta1
storage1_beta1: storage/v1beta1/lib/Cargo.toml
storage1_beta1-cargo: storage1_beta1
	cd storage/v1beta1 && cargo $(ARGS)

storage/v1beta2/lib/Cargo.toml: storage/v1beta2/spec.json $(MCP)
	$(MCP) generate $< storage/v1beta2
storage1_beta2: storage/v1beta2/lib/Cargo.toml
storage1_beta2-cargo: storage1_beta2
	cd storage/v1beta2 && cargo $(ARGS)

storagetransfer/v1/lib/Cargo.toml: storagetransfer/v1/spec.json $(MCP)
	$(MCP) generate $< storagetransfer/v1
storagetransfer1: storagetransfer/v1/lib/Cargo.toml
storagetransfer1-cargo: storagetransfer1
	cd storagetransfer/v1 && cargo $(ARGS)

streetviewpublish/v1/lib/Cargo.toml: streetviewpublish/v1/spec.json $(MCP)
	$(MCP) generate $< streetviewpublish/v1
streetviewpublish1: streetviewpublish/v1/lib/Cargo.toml
streetviewpublish1-cargo: streetviewpublish1
	cd streetviewpublish/v1 && cargo $(ARGS)

surveys/v2/lib/Cargo.toml: surveys/v2/spec.json $(MCP)
	$(MCP) generate $< surveys/v2
surveys2: surveys/v2/lib/Cargo.toml
surveys2-cargo: surveys2
	cd surveys/v2 && cargo $(ARGS)

tagmanager/v1/lib/Cargo.toml: tagmanager/v1/spec.json $(MCP)
	$(MCP) generate $< tagmanager/v1
tagmanager1: tagmanager/v1/lib/Cargo.toml
tagmanager1-cargo: tagmanager1
	cd tagmanager/v1 && cargo $(ARGS)

tagmanager/v2/lib/Cargo.toml: tagmanager/v2/spec.json $(MCP)
	$(MCP) generate $< tagmanager/v2
tagmanager2: tagmanager/v2/lib/Cargo.toml
tagmanager2-cargo: tagmanager2
	cd tagmanager/v2 && cargo $(ARGS)

tasks/v1/lib/Cargo.toml: tasks/v1/spec.json $(MCP)
	$(MCP) generate $< tasks/v1
tasks1: tasks/v1/lib/Cargo.toml
tasks1-cargo: tasks1
	cd tasks/v1 && cargo $(ARGS)

testing/v1/lib/Cargo.toml: testing/v1/spec.json $(MCP)
	$(MCP) generate $< testing/v1
testing1: testing/v1/lib/Cargo.toml
testing1-cargo: testing1
	cd testing/v1 && cargo $(ARGS)

texttospeech/v1/lib/Cargo.toml: texttospeech/v1/spec.json $(MCP)
	$(MCP) generate $< texttospeech/v1
texttospeech1: texttospeech/v1/lib/Cargo.toml
texttospeech1-cargo: texttospeech1
	cd texttospeech/v1 && cargo $(ARGS)

texttospeech/v1beta1/lib/Cargo.toml: texttospeech/v1beta1/spec.json $(MCP)
	$(MCP) generate $< texttospeech/v1beta1
texttospeech1_beta1: texttospeech/v1beta1/lib/Cargo.toml
texttospeech1_beta1-cargo: texttospeech1_beta1
	cd texttospeech/v1beta1 && cargo $(ARGS)

toolresults/v1beta3/lib/Cargo.toml: toolresults/v1beta3/spec.json $(MCP)
	$(MCP) generate $< toolresults/v1beta3
toolresults1_beta3: toolresults/v1beta3/lib/Cargo.toml
toolresults1_beta3-cargo: toolresults1_beta3
	cd toolresults/v1beta3 && cargo $(ARGS)

tpu/v1alpha1/lib/Cargo.toml: tpu/v1alpha1/spec.json $(MCP)
	$(MCP) generate $< tpu/v1alpha1
tpu1_alpha1: tpu/v1alpha1/lib/Cargo.toml
tpu1_alpha1-cargo: tpu1_alpha1
	cd tpu/v1alpha1 && cargo $(ARGS)

tpu/v1/lib/Cargo.toml: tpu/v1/spec.json $(MCP)
	$(MCP) generate $< tpu/v1
tpu1: tpu/v1/lib/Cargo.toml
tpu1-cargo: tpu1
	cd tpu/v1 && cargo $(ARGS)

translate/v2/lib/Cargo.toml: translate/v2/spec.json $(MCP)
	$(MCP) generate $< translate/v2
translate2: translate/v2/lib/Cargo.toml
translate2-cargo: translate2
	cd translate/v2 && cargo $(ARGS)

translate/v3beta1/lib/Cargo.toml: translate/v3beta1/spec.json $(MCP)
	$(MCP) generate $< translate/v3beta1
translate3_beta1: translate/v3beta1/lib/Cargo.toml
translate3_beta1-cargo: translate3_beta1
	cd translate/v3beta1 && cargo $(ARGS)

urlshortener/v1/lib/Cargo.toml: urlshortener/v1/spec.json $(MCP)
	$(MCP) generate $< urlshortener/v1
urlshortener1: urlshortener/v1/lib/Cargo.toml
urlshortener1-cargo: urlshortener1
	cd urlshortener/v1 && cargo $(ARGS)

vault/v1/lib/Cargo.toml: vault/v1/spec.json $(MCP)
	$(MCP) generate $< vault/v1
vault1: vault/v1/lib/Cargo.toml
vault1-cargo: vault1
	cd vault/v1 && cargo $(ARGS)

videointelligence/v1p1beta1/lib/Cargo.toml: videointelligence/v1p1beta1/spec.json $(MCP)
	$(MCP) generate $< videointelligence/v1p1beta1
videointelligence1_p1beta1: videointelligence/v1p1beta1/lib/Cargo.toml
videointelligence1_p1beta1-cargo: videointelligence1_p1beta1
	cd videointelligence/v1p1beta1 && cargo $(ARGS)

videointelligence/v1p2beta1/lib/Cargo.toml: videointelligence/v1p2beta1/spec.json $(MCP)
	$(MCP) generate $< videointelligence/v1p2beta1
videointelligence1_p2beta1: videointelligence/v1p2beta1/lib/Cargo.toml
videointelligence1_p2beta1-cargo: videointelligence1_p2beta1
	cd videointelligence/v1p2beta1 && cargo $(ARGS)

videointelligence/v1p3beta1/lib/Cargo.toml: videointelligence/v1p3beta1/spec.json $(MCP)
	$(MCP) generate $< videointelligence/v1p3beta1
videointelligence1_p3beta1: videointelligence/v1p3beta1/lib/Cargo.toml
videointelligence1_p3beta1-cargo: videointelligence1_p3beta1
	cd videointelligence/v1p3beta1 && cargo $(ARGS)

videointelligence/v1/lib/Cargo.toml: videointelligence/v1/spec.json $(MCP)
	$(MCP) generate $< videointelligence/v1
videointelligence1: videointelligence/v1/lib/Cargo.toml
videointelligence1-cargo: videointelligence1
	cd videointelligence/v1 && cargo $(ARGS)

videointelligence/v1beta2/lib/Cargo.toml: videointelligence/v1beta2/spec.json $(MCP)
	$(MCP) generate $< videointelligence/v1beta2
videointelligence1_beta2: videointelligence/v1beta2/lib/Cargo.toml
videointelligence1_beta2-cargo: videointelligence1_beta2
	cd videointelligence/v1beta2 && cargo $(ARGS)

vision/v1p1beta1/lib/Cargo.toml: vision/v1p1beta1/spec.json $(MCP)
	$(MCP) generate $< vision/v1p1beta1
vision1_p1beta1: vision/v1p1beta1/lib/Cargo.toml
vision1_p1beta1-cargo: vision1_p1beta1
	cd vision/v1p1beta1 && cargo $(ARGS)

vision/v1p2beta1/lib/Cargo.toml: vision/v1p2beta1/spec.json $(MCP)
	$(MCP) generate $< vision/v1p2beta1
vision1_p2beta1: vision/v1p2beta1/lib/Cargo.toml
vision1_p2beta1-cargo: vision1_p2beta1
	cd vision/v1p2beta1 && cargo $(ARGS)

vision/v1/lib/Cargo.toml: vision/v1/spec.json $(MCP)
	$(MCP) generate $< vision/v1
vision1: vision/v1/lib/Cargo.toml
vision1-cargo: vision1
	cd vision/v1 && cargo $(ARGS)

webfonts/v1/lib/Cargo.toml: webfonts/v1/spec.json $(MCP)
	$(MCP) generate $< webfonts/v1
webfonts1: webfonts/v1/lib/Cargo.toml
webfonts1-cargo: webfonts1
	cd webfonts/v1 && cargo $(ARGS)

webmasters/v3/lib/Cargo.toml: webmasters/v3/spec.json $(MCP)
	$(MCP) generate $< webmasters/v3
webmasters3: webmasters/v3/lib/Cargo.toml
webmasters3-cargo: webmasters3
	cd webmasters/v3 && cargo $(ARGS)

websecurityscanner/v1alpha/lib/Cargo.toml: websecurityscanner/v1alpha/spec.json $(MCP)
	$(MCP) generate $< websecurityscanner/v1alpha
websecurityscanner1_alpha: websecurityscanner/v1alpha/lib/Cargo.toml
websecurityscanner1_alpha-cargo: websecurityscanner1_alpha
	cd websecurityscanner/v1alpha && cargo $(ARGS)

websecurityscanner/v1beta/lib/Cargo.toml: websecurityscanner/v1beta/spec.json $(MCP)
	$(MCP) generate $< websecurityscanner/v1beta
websecurityscanner1_beta: websecurityscanner/v1beta/lib/Cargo.toml
websecurityscanner1_beta-cargo: websecurityscanner1_beta
	cd websecurityscanner/v1beta && cargo $(ARGS)

websecurityscanner/v1/lib/Cargo.toml: websecurityscanner/v1/spec.json $(MCP)
	$(MCP) generate $< websecurityscanner/v1
websecurityscanner1: websecurityscanner/v1/lib/Cargo.toml
websecurityscanner1-cargo: websecurityscanner1
	cd websecurityscanner/v1 && cargo $(ARGS)

youtube/v3/lib/Cargo.toml: youtube/v3/spec.json $(MCP)
	$(MCP) generate $< youtube/v3
youtube3: youtube/v3/lib/Cargo.toml
youtube3-cargo: youtube3
	cd youtube/v3 && cargo $(ARGS)

youtubeAnalytics/v1/lib/Cargo.toml: youtubeAnalytics/v1/spec.json $(MCP)
	$(MCP) generate $< youtubeAnalytics/v1
youtubeAnalytics1: youtubeAnalytics/v1/lib/Cargo.toml
youtubeAnalytics1-cargo: youtubeAnalytics1
	cd youtubeAnalytics/v1 && cargo $(ARGS)

youtubeAnalytics/v2/lib/Cargo.toml: youtubeAnalytics/v2/spec.json $(MCP)
	$(MCP) generate $< youtubeAnalytics/v2
youtubeAnalytics2: youtubeAnalytics/v2/lib/Cargo.toml
youtubeAnalytics2-cargo: youtubeAnalytics2
	cd youtubeAnalytics/v2 && cargo $(ARGS)

youtubereporting/v1/lib/Cargo.toml: youtubereporting/v1/spec.json $(MCP)
	$(MCP) generate $< youtubereporting/v1
youtubereporting1: youtubereporting/v1/lib/Cargo.toml
youtubereporting1-cargo: youtubereporting1
	cd youtubereporting/v1 && cargo $(ARGS)
